(function(n,f){typeof exports=="object"&&typeof module<"u"?f(exports):typeof define=="function"&&define.amd?define(["exports"],f):(n=typeof globalThis<"u"?globalThis:n||self,f(n["date-format-plugin"]={}))})(this,function(n){"use strict";const f={mounted(a,e){var o,s,l,u;const{value:r}=e;if(!r){console.error("binding.value is undefined");return}const{date:i,options:c}=r,t=(u=(l=(s=(o=e.instance)==null?void 0:o.$.appContext)==null?void 0:s.config)==null?void 0:l.globalProperties)==null?void 0:u.$formatDate;typeof t=="function"?a.textContent=t(i,c):console.error("formatDate function is not available")},updated(a,e){var o;const{value:r}=e,{date:i,options:c}=r,t=(o=e.instance)==null?void 0:o.$.appContext.config.globalProperties.$formatDate;typeof t=="function"?a.textContent=t(i,c):console.error("formatDate function is not available")}},d={install(a,e){if(!e||!e.default)throw new Error('DateFormatPlugin requires a "option" value.');const r=(i,c)=>{const t=i instanceof Date?i:new Date(i),o=e.langKey||"VITE_APP_LANG",s=o==="fa"?"fa-IR":"en-US";try{const l=e[o]||e.default,u=c||l;return t.toLocaleString(s,u)}catch(l){return console.error("Date formatting error:",l),t.toLocaleDateString(s)}};a.config.globalProperties.$formatDate=r,a.provide("formatDate",r),a.directive("format-date",f)}};n.DateFormatPlugin=d,n.vDateFormatDirective=f,Object.defineProperty(n,Symbol.toStringTag,{value:"Module"})});
