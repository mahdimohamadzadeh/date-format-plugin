(function(n,i){typeof exports=="object"&&typeof module<"u"?i(exports):typeof define=="function"&&define.amd?define(["exports"],i):(n=typeof globalThis<"u"?globalThis:n||self,i(n["date-format-plugin"]={}))})(this,function(n){"use strict";function i(e){var l,d,c;const t=(l=e.instance)==null?void 0:l.$.appContext.config.globalProperties.options;if(!t)throw new Error("Plugin options not set. Please configure the date format.");let{date:a,options:r}=e.value;a=new Date(a);const o=r||t[t.langKey]||t.default||{};o.year||(o.year="numeric",o.month="2-digit",o.day="2-digit",o.hour="2-digit",o.minute="2-digit",o.second="2-digit");const p=new Intl.DateTimeFormat(t.langKey,o).formatToParts(a),m={};p.forEach(s=>{s.type!=="literal"&&(m[s.type]=s.value)});const f=(r==null?void 0:r.format)||((d=t[t.langKey])==null?void 0:d.format)||((c=t==null?void 0:t.default)==null?void 0:c.format);if(!f)throw new Error("Custom format is not set. Please configure the date format.");if(typeof f=="function")return f(m);throw new Error("customFormat is not a function")}const u={mounted(e,t){e.textContent=i(t)},updated(e,t){e.textContent=i(t)}},g={install(e,t){if(!t)throw new Error('DateFormatPlugin requires a "option" value.');e.config.globalProperties.options=t,e.directive("format-date",u)}};n.DateFormatPlugin=g,n.vDateFormatDirective=u,Object.defineProperty(n,Symbol.toStringTag,{value:"Module"})});
